services:
  # PostgreSQL database for testing
  postgres-test:
    image: postgres:16-alpine
    container_name: infinity-postgres-test
    environment:
      POSTGRES_USER: infinity_user
      POSTGRES_PASSWORD: infinity_pass
      POSTGRES_DB: infinity_test_db
    ports:
      - "5433:5432"  # Different port to avoid conflict with dev DB
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U infinity_user -d infinity_test_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  # Redis for testing
  redis-test:
    image: redis:7-alpine
    container_name: infinity-redis-test
    ports:
      - "6380:6379"  # Different port to avoid conflict with dev Redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - test-network

  # Test runner
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: infinity-test-runner
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 5 &&
        echo 'Running tests...' &&
        poetry run pytest -v --tb=short --maxfail=5
      "
    environment:
      # Database
      POSTGRES_USER: infinity_user
      POSTGRES_PASSWORD: infinity_pass
      POSTGRES_DB: infinity_test_db
      POSTGRES_HOST: postgres-test
      POSTGRES_PORT: 5432
      DATABASE_URL: postgresql+asyncpg://infinity_user:infinity_pass@postgres-test:5432/infinity_test_db
      TEST_DATABASE_URL: postgresql+asyncpg://infinity_user:infinity_pass@postgres-test:5432/infinity_test_db

      # Redis
      REDIS_HOST: redis-test
      REDIS_PORT: 6379
      REDIS_URL: redis://redis-test:6379/0

      # App settings
      ENVIRONMENT: testing
      DEBUG: "false"
      SECRET_KEY: test-secret-key-for-testing-only
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      REFRESH_TOKEN_EXPIRE_DAYS: 7

      # External services (mock/disabled for tests)
      OPENAI_API_KEY: test-key
      ANTHROPIC_API_KEY: test-key

    volumes:
      - .:/app
      - /app/.venv  # Prevent overwriting container's virtual environment
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres_test_data:
